@import url(./../../common/modern-reset.css);
@import url(./../../common/base.css);

h1 {
  margin-block: 1rem;
}

.grid-item1 {
  background-color: var(--yellow);
}
.grid-item2 {
  background-color: var(--pink);
}
.grid-item3 {
  background-color: var(--blue);
}
.grid-item4 {
  background-color: var(--green);
}

.grid-box {
  border: 1px solid var(--green);
  background-color: var(--gray);
  display: grid;
  position: relative; /* 이렇게 해야 내부 아이템에 포지션을 줄 수 있음. item3번 보셈 */
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4, 50px);
  isolation: isolate; /* 컨테이너 안의 내용이 본문 밑으로 깔리지 않게 해줌 */

  .grid-item1 {
    grid-row: 1 / span 2;
    grid-column: 1 / span 2;
  }

  .grid-item2 {
    grid-row: 2 / span 2;
    grid-column: 2 / span 2;
  }

  .grid-item3 {
    position: absolute;
    inset: 2rem; /* top,bottom, right, left 다 선택하는 논리 속성 */
    z-index: -1; /* 보여지는 우선 순위 (앞 배치 같은거) 다만 음수는 주의해야할게 본문 밑으로 쌓인다. */
  }
}

/* 그리드 정렬 */
.grid-wrapper {
  border: 1px solid var(--red);
  block-size: 400px;
  display: grid;
  grid-template-columns: repeat(5, 200px);
  grid-template-rows: repeat(5, 50px);
  /* place-items: center; 수직 수평 정렬 한번에 */
  /* justify-content: end;  부모 컨테이너 안에서 테이블 전체를 오른쪽 끝으로 정렬 */
  /* justify-content: center; 테이블 자체를 부모 기준 가운데 정렬 */
  /* align-items: center; */
  place-content: center; /*모든 중앙 정렬*/

  /*justify-items: end;    열 안에서 컨텐츠 크기만큼 줄어든 후, 오른쪽 정렬 됨*/
  /* justify-items: center; 열 안에서 컨텐츠 크기만큼 줄어든 후, 가운데 정렬 됨 */
  /* align-items: center; */
  /* align-items: last baseline; 글자의 밑 줄을 기준으로 정렬되어서 깔끔해보임 last를 붙이면 칸 안에 바닥에 맞춰지고, first하면 칸 안에 위에 붙어서 정렬된다. */
}
/* 
.grid-item2 {
  font-size: 1.5rem;
  align-self: center; self = 나만 정렬해줘~
  justify-self: center;
  place-self: center; 위 두개를 한번에 정의 하는 속기법
} */
